diff -upr dev/linux/drivers/block/aoe/aoeblk.c gd/linux/drivers/block/aoe/aoeblk.c
--- dev/linux/drivers/block/aoe/aoeblk.c	2013-06-22 15:45:14.000000000 -0400
+++ gd/linux/drivers/block/aoe/aoeblk.c	2013-06-22 15:42:59.000000000 -0400
@@ -40,10 +40,8 @@ aoe_bio_pagedec(struct bio *bio)
 	}
 }
 
-static ssize_t aoedisk_show_state(struct device *dev,
-				  struct device_attribute *attr, char *page)
+static ssize_t aoedisk_show_state(struct gendisk *disk, char *page)
 {
-	struct gendisk *disk = dev_to_disk(dev);
 	struct aoedev *d = disk->private_data;
 
 	return snprintf(page, PAGE_SIZE,
@@ -53,10 +51,8 @@ static ssize_t aoedisk_show_state(struct
 			(d->nopen && !(d->flags & DEVFL_UP)) ? ",closewait" : "");
 	/* I'd rather see nopen exported so we can ditch closewait */
 }
-static ssize_t aoedisk_show_mac(struct device *dev,
-				struct device_attribute *attr, char *page)
+static ssize_t aoedisk_show_mac(struct gendisk *disk, char *page)
 {
-	struct gendisk *disk = dev_to_disk(dev);
 	struct aoedev *d = disk->private_data;
 	struct aoetgt *t = d->targets[0];
 
@@ -64,10 +60,8 @@ static ssize_t aoedisk_show_mac(struct d
 		return snprintf(page, PAGE_SIZE, "none\n");
 	return snprintf(page, PAGE_SIZE, "%012llx\n", mac_addr(t->addr));
 }
-static ssize_t aoedisk_show_netif(struct device *dev,
-				  struct device_attribute *attr, char *page)
+static ssize_t aoedisk_show_netif(struct gendisk *disk, char *page)
 {
-	struct gendisk *disk = dev_to_disk(dev);
 	struct aoedev *d = disk->private_data;
 	struct net_device *nds[8], **nd, **nnd, **ne;
 	struct aoetgt **t, **te;
@@ -102,18 +96,14 @@ static ssize_t aoedisk_show_netif(struct
 	return p-page;
 }
 /* firmware version */
-static ssize_t aoedisk_show_fwver(struct device *dev,
-				  struct device_attribute *attr, char *page)
+static ssize_t aoedisk_show_fwver(struct gendisk *disk, char *page)
 {
-	struct gendisk *disk = dev_to_disk(dev);
 	struct aoedev *d = disk->private_data;
 
 	return snprintf(page, PAGE_SIZE, "0x%04x\n", (unsigned int) d->fw_ver);
 }
-static ssize_t aoedisk_show_payload(struct device *dev,
-				    struct device_attribute *attr, char *page)
+static ssize_t aoedisk_show_payload(struct gendisk *disk, char *page)
 {
-	struct gendisk *disk = dev_to_disk(dev);
 	struct aoedev *d = disk->private_data;
 
 	return snprintf(page, PAGE_SIZE, "%lu\n", d->maxbcnt);
@@ -169,22 +159,34 @@ static int aoe_debugfs_open(struct inode
 	return single_open(file, aoedisk_debugfs_show, inode->i_private);
 }
 
-static DEVICE_ATTR(state, S_IRUGO, aoedisk_show_state, NULL);
-static DEVICE_ATTR(mac, S_IRUGO, aoedisk_show_mac, NULL);
-static DEVICE_ATTR(netif, S_IRUGO, aoedisk_show_netif, NULL);
-static struct device_attribute dev_attr_firmware_version = {
-	.attr = { .name = "firmware-version", .mode = S_IRUGO },
-	.show = aoedisk_show_fwver,
+static struct disk_attribute disk_attr_state = {
+	.attr = {.name = "state", .mode = S_IRUGO },
+	.show = aoedisk_show_state
+};
+static struct disk_attribute disk_attr_mac = {
+	.attr = {.name = "mac", .mode = S_IRUGO },
+	.show = aoedisk_show_mac
+};
+static struct disk_attribute disk_attr_netif = {
+	.attr = {.name = "netif", .mode = S_IRUGO },
+	.show = aoedisk_show_netif
+};
+static struct disk_attribute disk_attr_fwver = {
+	.attr = {.name = "firmware-version", .mode = S_IRUGO },
+	.show = aoedisk_show_fwver
+};
+static struct disk_attribute disk_attr_payload = {
+	.attr = {.name = "payload", .mode = S_IRUGO },
+	.show = aoedisk_show_payload
 };
-static DEVICE_ATTR(payload, S_IRUGO, aoedisk_show_payload, NULL);
 
 static struct attribute *aoe_attrs[] = {
-	&dev_attr_state.attr,
-	&dev_attr_mac.attr,
-	&dev_attr_netif.attr,
-	&dev_attr_firmware_version.attr,
-	&dev_attr_payload.attr,
-	NULL,
+	&disk_attr_state.attr,
+	&disk_attr_mac.attr,
+	&disk_attr_netif.attr,
+	&disk_attr_fwver.attr,
+	&disk_attr_payload.attr,
+	NULL
 };
 
 static const struct attribute_group attr_group = {
@@ -232,12 +234,12 @@ aoedisk_rm_debugfs(struct aoedev *d)
 static int
 aoedisk_add_sysfs(struct aoedev *d)
 {
-	return sysfs_create_group(&d->gd->dev.kobj, &attr_group);
+	return sysfs_create_group(&d->gd->kobj, &attr_group);
 }
 void
 aoedisk_rm_sysfs(struct aoedev *d)
 {
-	sysfs_remove_group(&d->gd->dev.kobj, &attr_group);
+	sysfs_remove_group(&d->gd->kobj, &attr_group);
 }
 
 static int
Only in gd/linux/drivers/block/aoe: aoeblk.c.20130622
Only in gd/linux/drivers/block/aoe: aoeblk.c.rej
